name: CI/CD - Go Shortener to AWS

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  id-token: write
  contents: read

jobs:
  test:
    name: Run Tests
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.25'
          
      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-
            
      - name: Install dependencies
        run: go mod download
        
      - name: Start DynamoDB Local
        run: |
          docker run -d --name dynamodb-local \
            -p 8000:8000 \
            amazon/dynamodb-local:latest \
            -jar DynamoDBLocal.jar -inMemory -port 8000
          sleep 10
          
      - name: Wait for DynamoDB to be ready
        run: |
          echo "Waiting for DynamoDB Local to be ready..."
          for i in {1..30}; do
            if curl -s http://localhost:8000 > /dev/null 2>&1; then
              echo "DynamoDB Local is ready!"
              break
            elif [ $i -eq 30 ]; then
              echo "DynamoDB Local failed to start within 60 seconds"
              docker logs dynamodb-local
              exit 1
            else
              echo "Attempt $i: DynamoDB not ready yet, waiting..."
              sleep 2
            fi
          done
        
      - name: Run go fmt
        run: |
          if [ "$(gofmt -s -l . | wc -l)" -gt 0 ]; then
            echo "Go code is not formatted:"
            gofmt -s -l .
            exit 1
          fi
          
      - name: Run go vet
        run: go vet ./...
        
      - name: Run tests
        run: |
          TEST_PACKAGES=$(find . -name "*_test.go" -not -path "./vendor/*" | xargs -I {} dirname {} | sort | uniq | tr '\n' ' ')
          if [ -n "$TEST_PACKAGES" ]; then
            echo "Testing packages: $TEST_PACKAGES"
            go test -v -race -coverprofile=coverage.out -coverpkg=./... $TEST_PACKAGES
          else
            echo "No test packages found"
            exit 1
          fi
        env:
          AWS_ENDPOINT: http://localhost:8000
          AWS_ACCESS_KEY_ID: fake
          AWS_SECRET_ACCESS_KEY: fake
          AWS_REGION: us-east-1
          DYNAMODB_TABLE: urls-table-test
          
      - name: Stop DynamoDB Local
        if: always()
        run: docker stop dynamodb-local && docker rm dynamodb-local
          
  deploy:
    name: Deploy to AWS
    runs-on: ubuntu-latest
    needs: test
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
          
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Setup SAM CLI
        uses: aws-actions/setup-sam@v2
        
      - name: SAM Build
        run: sam build
        
      - name: SAM Deploy
        run: |
          sam deploy \
            --no-confirm-changeset \
            --no-fail-on-empty-changeset \
            --stack-name go-shortener-stack \
            --capabilities CAPABILITY_IAM